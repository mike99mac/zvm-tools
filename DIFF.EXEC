/*-------------------------------------------------------------------*/
/* DIFF EXEC - Compare two files line by line                        */
/*-------------------------------------------------------------------*/
diffs = 0
parse arg args
call parseArgs args                  /* parse arguments */
call compareFiles                    /* compare files */
exit diffs                           /* Return non-0 if files differ */
 
/*-------------------------------------------------------------------*/
parseArgs: procedure expose fn1 ft1 fm1 fn2 ft2 fm2 flags
/* Parse input arguments                                             */
/*-------------------------------------------------------------------*/
  parse upper arg fn1 ft1 fm1 fn2 ft2 fm2 extra '(' flags
  if fn1 == "?" | fn1 == "-H" then do
    call usage
    exit
  end
  if fm2 == "" then do
    say "ERROR: Not enough arguments"
    call usage
    exit 2
  end
  if extra <> "" then do
    say "ERROR: Too many arguments"
    call usage
    exit 3
  end
  if fn2 = "=" then fn2 = fn1          /* Allow '=' shorthand */
  if ft2 = "=" then ft2 = ft1
  if fm2 = "=" then fm2 = fm1
  file1 = fn1 ft1 fm1
  file2 = fn2 ft2 fm2
  if file1 == file2 then do
    say "ERROR: Files are identical"
    exit 4
  end
  'estate' file1
  if rc <> 0 then do
    say "File 1" file1 "does not exist"
    exit 5
  end
  'estate' file2
  if rc <> 0 then do
    say "File 2" file2 "does not exist"
    exit 6
  end
return                               /* DIFF EXEC */
 
/*-------------------------------------------------------------------*/
setColor:
/* Change color of next line                                         */
/*-------------------------------------------------------------------*/
  if verbose = 0 then                /* no output */
    return
  parse arg color
  /* 'conwait'                                flush output stack */
  'pipe cp screen outarea' color '| hole' /* no COMMAND COMPLETE */
  return
 
/*-------------------------------------------------------------------*/
compareFiles: procedure expose fn1 ft1 fm1 fn2 ft2 fm2 flags,
  f1txt. f2txt. f1len f2len
/* Load files and compare line by line with resync capabilities      */
/*-------------------------------------------------------------------*/
  'execio * diskr' fn1 ft1 fm1 '(stem' f1txt. ')'
  if rc <> 0 then do
    say "ERROR: Cannot read file 1:" fn1 ft1 fm1
    exit 7
  end
  'execio * diskr' fn2 ft2 fm2 '(stem' f2txt. ')'
  if rc <> 0 then do
    say "ERROR: Cannot read file 2:" fn2 ft2 fm2
    exit 8
  end
  f1len = f1txt.0
  f2len = f2txt.0
  if f1len = "" then f1len = 0
  if f2len = "" then f2len = 0
  i = 1
  j = 1
  do while (i <= f1len) & (j <= f2len)
    if f1txt.i = f2txt.j then do /* move forward in both files */
      i = i + 1
      j = j + 1
      iterate
    end
    diffStart_i = i           /* Lines differ - try to sync back up */
    diffStart_j = j
    found = 0
    do lookahead = 0 to 10
      if (i+lookahead <= f1len) then
        ii = i + lookahead
        if f1txt.ii = f2txt.j then do
          diffEnd_i = i + lookahead - 1
          diffEnd_j = j - 1
          found = 1
          leave
        end
      ii = i + lookahead
      jj = j + lookahead
      if (jj <= f2len) then
        if f1txt.i = f2txt.jj then do
          diffEnd_i = i - 1
          diffEnd_j = j + lookahead - 1
          found = 1
          leave
        end
      if (ii <= f1len) & (jj <= f2len) then
        if f1txt.ii = f2txt.jj then do
          diffEnd_i = i + lookahead - 1
          diffEnd_j = j + lookahead - 1
          found = 1
          leave
        end
    end
    if found = 0 then do  /* can't resync: remaining lines different */
      diffEnd_i = f1len
      diffEnd_j = f2len
    end
    if diffStart_i = diffEnd_i then
      say diffStart_i"c"diffStart_j
    else
      say diffStart_i","diffEnd_i"c"diffStart_j","diffEnd_j
    do k = diffStart_i to diffEnd_i
      if k <= f1len then
        say "<" f1txt.k
    end
    say "---"
    call setColor "red"
    do k = diffStart_j to diffEnd_j
      if k <= f2len then
        say ">" f2txt.k
    end
    call setColor "green"
    diffs = 1
    i = diffEnd_i + 1
    j = diffEnd_j + 1
  end
 
  if i <= f1len then do              /* Handle remaining lines */
    say i","f1len"c"j-1
    do k = i to f1len
      say "<" f1txt.k
    end
    say "---"
    diffs = 1
  end
  else if j <= f2len then do
    say i-1"c"j","f2len
    say "---"
    do k = j to f2len
      say ">" f2txt.k
    end
    diffs = 1
  end
return
 
/*-------------------------------------------------------------------*/
usage:
/* Display help                                                      */
/*-------------------------------------------------------------------*/
  say "Name : DIFF EXEC - Compare two files"
  say "Usage: diff fn1 ft1 fm1 fn2 ft2 fm2 (flags)"
  say "Where: 'fn1 ft1 fm1' is the first file"
  say "       'fn2 ft2 fm2' is the second file"
return
